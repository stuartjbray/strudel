//@title conspirulina
//@by Stuart Bray
//@url https://soundcloud.com/stuart-j-bray
setcpm(30)

// RE RECORD

// -------------- Drums

var _drums_intro = stack( // build up
  silence
).color("white") 
var _drums1 =     stack(// normal
 sound("AkaiLinn_bd").struct(  "1 0 0 0 1 0 0 0").slow(2),
 sound("AkaiMPC60_rim").struct("0 0 1 0 0 0 1 0").gain("<[1.5 .7]!2>"),
 sound("AlesisSR16_hh").struct("0 0 0 0 0 0 0 0"),
 sound("AkaiLinn_cr").struct(  "0 0 0 0 0 0 0 0"),
).color("white") 

var _drums2 =     stack(  // crazy
 sound("AkaiLinn_bd").struct(  "1*2 0 1 0 0 0 0 0"),
 sound("AlesisHR16_lt").struct("0   1 0 0 1 0 0 <0 1> "),
 sound("AlesisSR16_rim").struct("0   0 1 0 0 0 1*2 0")  ,
 sound("AlesisSR16_cb").struct("0 0 0 0 0 1 0 <0 1> ")  ,
 sound("AkaiMPC60_hh").struct(  "0 1*2 0 1*2 0 1*4 0 1*2 ")  ,
).color("white") 

var _drums3 = stack( // build up
 sound("AkaiLinn_bd").struct(  "1 [- 1] 0 1 0 0 0 0"),
 sound("AlesisHR16_lt").struct("0   0 0 0 0 0 1 0 "),
 sound("AkaiMPC60_rim").struct("0   0 0 [- 1] 0 1 [- 1] 0")  ,
).color("white") 

var _drums_outro = arrange(
  [1,stack(
   sound("AkaiLinn_bd").struct(  "1*2 0 1 0 0 0 0 0"),
   sound("AlesisHR16_lt").struct("0   1 0 0 1 0 0 <0 1> "),
   sound("AlesisSR16_rim").struct("0   0 1 0 0 0 1*2 0")  ,
   sound("AlesisSR16_cb").struct("0 0 0 0 0 1 0 <0 1> ")  ,
    )],
  [1,stack(
   sound("AkaiLinn_bd").struct(  "1*2 0 1*2 0 1*3 0 1*4 0"),
   sound("AlesisHR16_lt").struct("0   1 0 0 1*2 0 0 1*2 "),
   sound("AlesisSR16_rim").struct("0   0 1*2 0 0 0 1*2 0")  ,
   sound("AlesisSR16_cb").struct("0 0 0 0 0 1 0 <0 1> ")  ,
    )],

)


var dug1 = n(`<
 [5 - - 2 4 [- 5] - 5]
 [- - 5 4]
 [3 - - 0 2 [- 3] - 3]
 [- - 3 2]
>`)
var dug2 = n(`<
 [1 - - -2 0 [- 1] - 1]
 [- - 1 1#]
 [2 - - 3 2 [- 1#] - 2]
 [- - 2 4]
>`)
var _dug1 = dug1.sound("gm_clavinet").scale("c2:major").color("red").distort(1.5).release(.3).gain(.6)
var _dug2 = dug2.sound("gm_clavinet").scale("c2:major").color("red").distort(1.5).release(.3).gain(.6)

var bass1 = n(`< 5 [- 7] 3 [- 5]>`)
var bass2 = n(`< 1 [- 3] 2 [- 4]>`)
var _bass1 = bass1.sound("gm_electric_guitar_jazz").scale("c2:major").color("orange").distort(1.5).gain(1.8)
var _bass2 = bass2.sound("gm_electric_guitar_jazz").scale("c2:major").color("orange").distort(1.5).gain(1.8)

var chords1 = n(`<
 [2,4,5]@2 [0,2,3]@2
>`)
var chords2 = n(`<
 [-2,0,1]@2 [0,2,4]@2
>`)
var _chords1 = chords1.struct("[- 1] [- 1]@2 0 0 1@2 0").sound("piano").scale("c4:major").gain(.7).color("yellow")
var _chords2 = chords2.struct("[- 1] [- 1]@2 0 0 1@2 0").sound("piano").scale("c4:major").gain(.7).color("yellow")

var bip1 = n(`<
 [2 2 0 0]@2
>`)
var bip2 = n(`<
 [-2 -2 0 0]@2
>`)
// [- 1] <1 0> [- 1] <1 0>       [- 1] [- 1]@2 0 0 1@2 0
var _bip1 = bip1.struct("[1 -]!4").sound("square").scale("c3:major").distort("<1.4 1.8>").gain(.2).attack(.1).color("purple")
var _bip2 = bip2.struct("[1 -]!4").sound("square").scale("c3:major").distort("<1.4 1.8>").gain(.2).attack(.1).color("purple")



var lead1 = n(`<
 - [- [2 4] 5@2]
 - [- [1 0] 2@2]
>`)
var lead2 = n(`<
 [- 1 [0 -] -]
 [- [1 0] 2 [- 0]]
 [-]
 [- [3] 2 -]
>`)
var lead3 = n(`<
 -
 [- [2 4] 5@2]
 [- 7 6 7 6 5 - -]
 [- 5 4 2 1 0 - -]
>`)
var lead4 = n(`<
 [- 1 [0 -] -]
 [- 1 1# 2 - - 0 -]
 [- 3 [2 -] -]
 [- 3 [4 -] -]
>`)
var lead5 = n(`<
 -
 [5 4 [- [5,7]] -]
 [8 9 [- [5,7]] -]
 [- - [- [2,5]] -]
>`)
var lead6 = n(`<
 [3 - [- [5,7]] -]
 [5 4 [- [4,6]] -]
 [8 9 [- [6,9]] -]
 [8 - [- [7,11]] -]
>`)
var _lead1 = lead1.sound("gm_lead_2_sawtooth").scale("c3:major").color("green").gain(1.8).release(.5)
var _lead2 = lead2.sound("gm_lead_2_sawtooth").scale("c3:major").color("green").gain(1.8).release(.5)
var _lead3 = lead3.sound("gm_lead_2_sawtooth").scale("c3:major").color("green").gain(1.8).release(.5)
var _lead4 = lead4.sound("gm_lead_2_sawtooth").scale("c3:major").color("green").gain(1.8).release(.5)
var _lead5 = lead5.sound("gm_lead_2_sawtooth").scale("c4:major").color("green").gain(1.8).release(.5)
var _lead6 = lead6.sound("gm_lead_2_sawtooth").scale("c4:major").color("green").gain(1.8).release(.5)

var _sweep1 = n(`<5 5 3 3>`).sound("gm_violin").scale("c3:major").color("cyan").gain(2)
var _sweep2 = n(`<1 1 2 2>`).sound("gm_violin").scale("c3:major").color("cyan").gain(2)

// -------------------------- Bridge

var leadB1 = n(`<3 1 0 2>`)
var leadB2 = n(`<5 3 2 4>`)
var _leadB1 = leadB1.struct("- [1 1 0 <1 0>]").sound("gm_lead_2_sawtooth").scale("c4:major").color("green").gain(1.5).release(.5).room(1)
var _leadB2 = leadB2.struct("- [[0 1] 0 1 0]").sound("gm_lead_2_sawtooth").scale("c4:major").color("green").gain(1.5).release(.5).room(1)

var _sweepB1 = n(`<[[3,5] [1,3] [0,2] [2,4]]@8>`).struct("1@2 [- 1] 0").sound("gm_violin").scale("c3:major").color("cyan").gain(2).lpf("<4000 1200>")

var bassB1 = n(`<
 3 [- 3] 1 [- 1] 0 [- 0] 2 [- 2]
 >`)
var bassB2 = n(`<
 5 [5 -] 3 [3 -] 2 [2 -] 4 [4 -]
 >`)
var _bassB1 = bassB1.sound("gm_electric_guitar_jazz").scale("c2:major").color("orange").distort(1.5)
var _bassB2 = bassB2.sound("gm_electric_guitar_jazz").scale("<c2,c3>:major").color("orange").distort(1.5).vibrato(4)


var M = 1;
$: arrange(
  [M*4, stack(    
    _drums1,    _chords1,     _bass1,    _dug1,
  )],
  [M*4, stack(
    _drums1,    _chords2,    _bass2,    _dug2,
  )],
  [M*4, stack(    
    _drums1,    _chords1,     _bass1,    _dug1,    _lead1,
  )],
  [M*4, stack(
    _drums1,    _chords2,    _bass2,    _dug2,    _lead2,
  )],
  [M*4, stack(    
    _drums1,    _chords1,    _bass1,    _lead3,     _sweep1,
  )],
  [M*4, stack(
    _drums1,    _chords2,    _bass2,    _lead4,     _sweep2,
  )],
  [M*4, stack(    
    _drums1,    
    _chords1.transpose(-12).gain(2),    _bass1,
    _lead3.transpose(12),     _sweep1,
  )],
  [M*4, stack(
    _drums1,    
    _chords2.transpose(-12).gain(2),    _bass2,    
    _lead4.transpose(12),     _sweep2,
  )],
  [M*4, stack( // ----------------- Crazy Drums
    _drums2,    _bass1,    _sweep1, _bip1,
  )],
  [M*4, stack(
    _drums2,    _bass2,    _sweep2, _bip2,
  )],
  
  [M*4, stack(    // ------------- Best bit
    _drums2,    _bass1,    _dug1, 
    _lead5.transpose(-12).gain(2),     
    _sweep1.transpose(12).gain(1),
  )],
  [M*4, stack(
    _drums2,    _bass2,    _dug2, 
    _lead6.transpose(-12).gain(2),     
    _sweep2.transpose(12).gain(1),
  )],
  [M*4, stack(    
    _drums2,    _bass1,    _dug1.transpose(12).gain(2), 
    _lead5,     _sweep1,
  )],
  [M*4, stack(
    _drums2,    _bass2,    _dug2.transpose(12).gain(2), 
    _lead6,     _sweep2,
  )],
  
  [M*8, stack( // ---------------- Bridge
    _drums3,    _bassB1,    _leadB1,     _sweepB1,
  )],
  [M*8, stack( // ---------------- Bridge
    _drums3,    _bassB1,  _bassB2,    _leadB1, _leadB2,     _sweepB1,
  )],

  [1*4, stack(    // intro
    _drums2,    _chords1,    _bass1,    _lead3,     _sweep1,
  )],
  [1*4, stack(
    _drums2,    _chords2,    _bass2,    _lead4,     _sweep2,
  )],

  [1*4, stack(   // chorus
    _drums2,    _bass1,    _dug1, 
    _chords1.transpose(-12).gain(1),
    _sweep1.transpose(12).gain(1),
  )],
  [1*4, stack(
    _drums2,    _bass2,    _dug2, 
    _chords2.transpose(-12).gain(1),
    _sweep2.transpose(12).gain(1),
  )],
  [1*2,stack(
    _drums_outro,
  )],  
  
  [1,silence],  
).punchcard()
  