//@title Urruppy
//@by Stuart Bray
//@url https://soundcloud.com/stuart-j-bray

/*
*/


// -------------- Drums
var d1 = sound("SakataDPM48_bd, RolandTR626_bd").struct(  "1 0 0 0 1 0 0 0").room(1.4) //AkaiLinn_bd,
var d2 = sound("AkaiMPC60_rim").struct("0 0 0 0 0 0 1 0").lpf("<2000 5000>")
var d3 = sound("RolandMC303_rim").struct("0 0 0 0 0 <[- 1] 0> 0 0").gain(.5)
var d4 = sound("AkaiLinn_bd").struct(  "0 0 0 0 0 0 0 0")

var _drums_intro = stack( d1, d2  ).color("white") // build up
var _drums1 =     stack(  d1,  d2,  d3,  d4).color("white") // normal
var _drums2 =     stack(  d1, d2  ).color("white") // break down



var chords1 = n(`<
 0
 [0,5] 
 2
 [2,7]
 4
 [4,6]
 4
 [2,7]
>`)
var chords2 = n(`<
-
>`)
var _chords1 = chords1.sound("gm_tremolo_strings, gm_overdriven_guitar").scale("<c3,c4>:major").color("green").attack(.5)
var _chords2 = chords2.sound("gm_tremolo_strings, gm_acoustic_bass").scale("<c3,c4>:major").color("green").attack(.5)

var base1 = n(`<
 [[6 5 6 -] - - -]
 -
 [[5 4 5 -] - - -]
 -
 
>`)
var base2 = n(`<
 -
 [- - [2 3 4 3] 2]
 -
 [- - [2 3 4 5] 4]
>`)
var _base1 = base1.sound("piano").scale("c2:major").color("orange")
var _base2 = base2.sound("piano").scale("c2:major").color("orange")

var descend1 = n(`<
 [6 5 6 - 5 4 5 - 4 2 4 - 2 1 2 -]
>`)
var _descend1 = descend1.sound("piano").scale("<c5 c4 c3 c2>:major").color("purple") 


var lead1 = n(`<
 [0 - 2 [- 4]]
 2
 [4 - 5 [- 6]]
 4
 [2 - 1 -]
 -
 [0 - 4 -]
 -
>`)
var lead2 = n(`<
-
>`)
var _lead1 = lead1.sound("gm_shamisen").scale("c3:major").color("yellow").distort(1.5).echo(4,.06125,.5)
var _lead2 = lead2.sound("gm_shamisen").scale("c3:major").color("yellow").distort(1.5).echo(4,.06125,.5)

var uppy1 = n(`<
  [0 2 0 -5 0 4 0 -5]
  [2 4 2 -5 2 6 2 -5]
>`.fast(2).add("<0@2 2@2 4@2 7 0>"))
  
var _uppy1 = uppy1.sound("sine square").fm(sine.range(1,50)).vib("<1 10 30>").fmattack("<.5 1 .8 1.2>")
  .jux(rev).room("<0 1>").clip("<.5 1 .8>").crush("<4 5 6 7>").gain(.3).color("white")

var uppy2 =n(`<
 [7 0 0 7 7 - 0 7]
>`.fast(2))
var _uppy2 = uppy2.sound("sine square").fm(sine.range(1,50)).vib("<1 10 30>").fmattack("<.5 1 .8 1.2>")
  .jux(rev).room("<0 1>").clip("<.5 1 .8>").crush("<4 5 6 7>").gain(.3).color("white")

var M = 1;
// M=0;
$: arrange(
  [M*4, stack(   
    _uppy1.scale("<c2>:major").degradeBy(.2),
    _drums_intro,
    _base1,
  )],
  [M*8, stack(
    _uppy1.scale("<c2,c3>:major").degradeBy(.1),
    _drums1,
    _chords1, 
    _base1,
  )],
  [M*8, stack(    // Full Intro
    _uppy1.scale("<c5>:major").degradeBy(.1),
    _drums1,
    _chords1, 
    _lead1, _base2
  )],
  [M*4, stack( // Breakout
    _drums1,
    _uppy2.gain(5),
    _descend1.gain(1),
  )],
  [M*4, stack( // Breakout
    _drums1,
    _uppy2.gain(1),
    _descend1.jux(rev).gain(2),
  )],
  [1*8, stack(    // Full Intro
    _uppy1.scale("<c5>:major").degradeBy(.5),
    _drums1,
    _chords1.gain(.6), 
    _lead1.jux(rev), 
    _base2.jux(rev),
  )],
  ).punchcard()
  