//@title homozygote
//@by Stuart Bray
//@url https://soundcloud.com/stuart-j-bray

/*
*/
setcpm(30)

// -------------- Drums
var d1 = sound("AkaiLinn_bd").struct(  "1 0 0 1  1 0 0 0").gain("[.8 .3 .8 1]")
var d2 = sound("AkaiMPC60_rim").struct("0 0 1 0  0 0 1 0").room(".1 1")
var d3 = sound("AlesisSR16_hh").struct("1*16").lpf("400*3 1000*3 400*6 1000*3")
var d4 = sound("AkaiLinn_cr").struct(  "0 0 0 0 0 0 0 0")

var _drums_intro = stack( d1, d2, d3  ).color("white") // build up
var _drums1 =     stack(  d1,  d2,  d3,  d4).color("white") // normal
var _drums2 =     stack(  d1, d2  ).color("white") // break down

var chords1 = n(`< [0,4,6] - [0,5,7] ->`)
var chords2 = n(`< [4,6,10] - [0,5,9] ->`)
var _chords1 = chords1.sound("piano").scale("c3:major").color("red")
var _chords2 = chords2.sound("piano").scale("c3:major").color("red")

var base1 = n(`< 0@2  -2@2 >`)
var base2 = n(`< 3@2 2@2 >`)
var _base1 = base1.sound("gm_reed_organ").scale("c3:major").color("orange").vib("8").attack(1).sustain(.5)
var _base2 = base2.sound("gm_reed_organ").scale("c3:major").color("orange").vib("8").attack(1).sustain(.5)

var lead1 = n(`<
 [- [0 -2 -1 0] - - ]
 [- [0 -2 -1 0] - - ]
 [- [-2 -4 -3 -2] - -]
 [- [-2 -4 -3 -2] - -]
>`)
var lead2 = n(`<
 [- [0 -2 -1 0] - [1 2 1 0] ]
 [- [0 -2 -1 0] - - ]
 [- [-2 -4 -3 -2] - -]
 [- [-2 -4 -3 -2] - [2 1 0 -]]
>`)
var _lead1 = lead1.sound("piano").clip(.6).echo(3, 1/16, .8)
  .scale("c3:major").color("yellow")
var _lead2 = lead2.sound("piano").clip(.6).echo(3, 1/16, .8)
  .scale("c3:major").color("yellow")

var synth1 = n(`< 2 1 -1 0 >`)
var synth2 = n(`< 2 1 -1 0>`)
var _synth1 = synth1.sound("gm_fx_brightness, gm_overdriven_guitar").gain(.4).attack(.6).scale("c4:major").color("yellow")
var _synth2 = synth2.sound("gm_fx_brightness, gm_overdriven_guitar").gain(.4).attack(.6).scale("c4:major").color("yellow")


var sweep1 = n(`<
 [0,5]
 [1,6]
 [2,7]
 [3,8]
 >`)
var sweep2 = n(`<
 [0,5]
 [-1,4]
 [-2,3]
 [-3,2]
 >`)

var _sweep1 = sweep1.sound("gm_violin").gain(.7).scale("c4:major").color("green")
var _sweep2 = sweep2.sound("gm_violin").gain(.7).scale("c4:major").color("green")

var drone1 = n(`<
 [0,5]
 [-1,4]
 [-2,3]
 [-3,2]
 >`)
var drone2 = n(`<
 [0,5]
 [1,6]
 [2,7]
 [3,8]
 >`)

var _drone1 = drone1.sound("gm_orchestral_harp").struct("1 0 1 0").scale("c4:major").color("cyan")
var _drone2 = drone2.sound("gm_orchestral_harp").struct("1 0 1 0").scale("c4:major").color("cyan")

var tune1 = n(`<
 [- 7@2 [5,7] - [4,8]@2 - ]
 [- 7 6 [5,7] - [4,9]@2 - ]
 [- 3 2 [3,5] - [2,5]@2 - ]
 [- 2 3 [5,9] - [3,8]@2 - ]
>`)
var tune2 = n(`<
 [- 0 1 [0,2] - 1 2 - ]
 [- 1 2 [1,3] - [2,4]@2 - ]
 [- 7 6 [5,7] - 7@2 - ]
 [- 7 - [8,10]@2 [7,9]@3 ]
>`)
var _tune1 = tune1.sound("piano, gm_electric_bass_pick").room(1).scale("c3:major").color("red")
var _tune2 = tune2.sound("piano, gm_electric_bass_pick").room(1).scale("c3:major").color("red")

var swing1 = n(`<
 [0,2,4]@2
 [-2,0,2]@2
>`)
var swing2 = n(`<
 [3,5,10]@2
 [2,4,9]@2
>`)
var _swing1 = swing1.sound("gm_reed_organ, gm_pad_poly").room(1).struct("1!2 0!1 1!2 0!2 1").lpf("500 2000 300 2000")
  .scale("c3:major").color("cyan")
var _swing2 = swing2.sound("gm_reed_organ, gm_pad_poly").room(1).struct("1!2 0!1 1!2 0!2 1").lpf("500 2000 300 2000")
  .scale("c3:major").color("cyan")

var plunk1 = n(`<
 [[0,5] - [- [1,4]] - [3,6] - [2,7] - ]
 [- - 3 - 2 - 3 - ]
 [[4,6,8] - - [5,6,9]]
 -
>`)
var plunk2 = n(`<
 [[5,7] [- [6,9] ] [- [7,10]] - [10,12] - [9] -]
 [- [ 8 7 ]]
 [4,7,8]
 -
>`)
var _plunk1 = plunk1.sound("piano").scale("c4:major").color("blue").gain(1.5)
var _plunk2 = plunk2.sound("piano").scale("c4:major").color("blue").gain(1.5)



var _full1 = stack( _chords1,     _base1,    _lead1,    _synth1,    _sweep1,    _drone1 )
var _full2 = stack( _chords2,     _base2,    _lead2,    _synth2,    _sweep2,    _drone2 )
var M = 1; 
$: arrange(
  [M*4, stack(    
    _drums_intro,
    _chords1,     _base1,
  )],
  [M*4, stack(
    _drums1,
    _chords2,    _base2,
  )],
  [M*4, stack(    
    _drums1,
    _chords1,     _base1,    _lead1,    _synth1,
  )],
  [M*4, stack(
    _drums1,
    _chords2,    _base2,    _lead2,    _synth2,
  )],
  [M*4, stack(    
    _drums1,    _full1
  )],
  [M*4, stack(
    _drums1,    _full2
  )],
  [M*4, stack(    
    _drums1,
    _full1.gain(.3),
    _tune1.transpose(12),
  )],
  [M*4, stack(
    _drums1,
    _full2.gain(.3),
    _tune2.transpose(12),
  )],
  [M*4, stack(
    _drums1.lpf("1000 2000 3000 4000"),
    _full1.transpose(12).gain(.3),
    _tune1,
  )],
  [M*4, stack(
    _drums1.hpf("4000 3000 2000 1000"),
    _full2.transpose(12).gain(.3),
    _tune2
  )],
  [M*4, stack(    
    _drums_intro,
    _chords1,     _base1,
  )],
  [M*4, stack(
    _drums1,
    _chords2,    _base2,
  )],
  [M*4, stack(    
    _drums1,
    _chords1.transpose(12),     _base1.transpose(12),    _lead1,   _swing1,
  )],
  [M*4, stack(
     _drums1,
    _chords2.transpose(12),    _base2.transpose(12),    _lead2,   _swing2,
  )],
  [M*4, stack(    
    _drums1,
    _chords1, //_base1,    
    _lead1,   _swing1,  _plunk1,
  )],
  [M*4, stack(
     _drums1,
    _chords2, //_base2,    
    _lead2,   _swing2, _plunk2,
  )],
  [1*4, stack(    
    _lead1,   _swing1,  
    _plunk1.transpose(-12),
    _synth1,    _sweep1,    _drone1    
  )],
  [1*4, stack(
    _chords2, 
    _lead2,   _swing2, 
    _plunk2.transpose(-12),
    _synth2,    _sweep2,    _drone2    
  )],
  [1*4, stack(    
    _drums_intro,
    _chords1,     _base1,
  )],
  [1*4, stack(
    _drums1,
    _chords2,    _base2,
  )],
  [4,silence]
).punchcard()
  