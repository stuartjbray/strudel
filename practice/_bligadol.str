//@title Template
//@by Stuart Bray
//@url https://soundcloud.com/stuart-j-bray

setcpm(30)

// -------------- Drums
const drumsPass = (x) => x.color("white");

var d1 = sound("bossdr110_bd").struct(  "1 0 0 1 1 0 0 0")
var d2 = sound("jd990_oh:2").struct("0 0 1 0 0 0 1 0").gain(".2 .4")
var d3 = sound("yamahary30_ht:1").struct("1 0 0 0 1 0 0 0")
var d4 = sound("sp12_hh:<1 2>").struct("1*8").gain("[.2 .5]*2")

var _drums_intro = drumsPass(stack( d1, d2  ))            // start
var _drums1 =      drumsPass(stack(  d1,  d2,  ))  // normal
var _drums2 =      drumsPass(stack(  d1,  d2,  d3,  d4))  // more 
var _drums3 =      drumsPass(stack(  d1, d2  ))           // break down


// Define pass functions for each instrument
var chordsPass = (x) => x.scale("c3:major").sound("piano").color("red")
var bassPass = (x) => x.scale("c3:major").sound("piano").color("orange")
var leadPass = (x) => x.sound("steinway").scale("c3:major").color("yellow")
var guitPass = (x) => x.scale("c3:major").sound('gm_electric_guitar_clean').color("green")
var danPass = (x) => x.scale("<c2,c3,c4>:major").sound('dantranh_vibrato').color("blue").room(2)

// Apply pass functions to patterns
var _chords1 = chordsPass(n(`<
 [0,2,5]  -
 [-2,2,4] -
>`))
var _chords2 = chordsPass(n(`<
 [-3,0,1] -
 [-4,0,2] -
>`))

var _bass1 = bassPass(n(`<
 - [- - [- 0] [2 3] ] 
 - [- - [- 0] [2 1]] 
>`))
var _bass2 = bassPass(n(`<
 - [- - [- 0] [2 3] ]
 - [- - [- 0] [2 1]] 
>`))

var _lead1 = leadPass(n(`<
 [5 - - 5] - [4 - - 4] -
>`))
var _lead2 = leadPass(n(`<
  [3 - - 3] - [2 - - 2] -
>`))

var _lead3 = leadPass(n(`<
  [- 5 6 -] [7@2 0 -]
  [- [2 1] 2 -] [- [3 2] 3 -]
>`))
var _lead3x = leadPass(n(`<
  [- 9 8 -] [- - 9 -]
  [- [4 -] - -] [- [5 -] - -]
>`))
var _lead4 = leadPass(n(`<
  [- 2 3 -] [4@2 0 -]
  [- [-2!2 0] 2 -] [- [2!2 5] 9 -]
>`))
var _lead4x = leadPass(n(`<
  [- 9 10 -] [11 - - -]
  [- - [- -4] [-2 0]] [- - [- 2] [5 11]]
>`))

var _guit1 = guitPass(n(`<
 5 4 3 2
>`))
var _guit2 = guitPass(n(`<
 1 2 3 2
>`))

var _tune1 = danPass(n(`<
 [- 5 4 -]
 [- 3 2 -]
 [- 1 2 -]
 [- 2 1 -]
>`))
var _tune2 = danPass(n(`<
 [- 1 2 -]
 [- 2 1 -]
 [- - 0 1 2 - - -]
 [4 3 2 1 2 - - -]
>`))

var M = 1;
$: arrange(
  [M*4, stack(    
    _drums_intro,
    _chords1,     _bass1,
  )],
  [M*4, stack(
    _drums1,
    _chords2,    _bass2,
  )],
  [M*4, stack(    
    _drums1,
    _chords1,     _bass1,    _lead1,    _guit1,
  )],
  [M*4, stack(
    _drums1,
    _chords2,    _bass2,    _lead2,    _guit2,
  )],
  [M*4, stack(    
    _drums1,
    _chords1,     _bass1,    _guit1,   // _tune1,
    _lead3,
  )],
  [M*4, stack(
    _drums1,
    _chords2,    _bass2,    _guit2,    // _tune2,
    _lead4,
  )],
  [1*4, stack(    
    _drums2,
    _chords1,     _bass1,    _guit1,   // _tune1,
    _lead3,    _lead3x,
  )],
  [1*4, stack(
    _drums2,
    _chords2,    _bass2,    _guit2,    // _tune2,
    _lead4,    _lead4x,
  )],
  [1*4, stack(    
    _drums2,
    _chords1,     _bass1,    _guit1,   //_tune1,
    _lead3.gain(.4),
  )],
  [1*4, stack(
    _drums2,
    _chords2,    _bass2,    _guit2,     //_tune2,
    _lead4.gain(.4),
  )],

).punchcard()
  