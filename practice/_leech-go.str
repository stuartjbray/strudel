//@title leech-go
//@by Stuart Bray
//@url https://soundcloud.com/stuart-j-bray

/*
*/
setcpm(30)

// -------------- Drums
var d1 = sound("AkaiLinn_bd").struct(  "1 0 0 1 0 0 0 0").echo(2,.25,.5)
var d2 = sound("AkaiMPC60_rim").struct("0 0 0 0 <1 [1 1] [1 1 1 1] [1 1]> 0 0 0").gain("[.4 .6 .8 .6]*16")

var d3 = sound("AlesisSR16_hh").struct("1 0 1*2 1 0 12 0 0").lpf("<[1500 3000@2]>")
var d4 = sound("circuitstom_sd").struct(  "0 0 1 0 0 0 1 0").room(.4).gain(".4 1")

var d4_fill = sound("circuitstom_sd").struct(  "<-@3 [0 0 1 0 0 0 1 1]>").room(.4)
var d5 = sound("dpm48_rd").struct("<- - - [0 0 1 0 0 0 1 1]>")

var d2a = sound("akaixr10_rim").struct("1 0 <1 1*2> 0 1 0 1 0").lpf("< 1000 1200 1400 1600>*2")
var d6 = sound("gm_melodic_tom").struct("1 0 1 1 0 1 0 0")

var _drums_intro = stack( d1, d2  )          .color("white") // build up
var _drums1 =     stack(  d1,  d2,  d3,  d4, d4_fill, d5    ) .color("white") // normal
var _drums2 =     stack(  d2a, d6  )          .color("white") // break down

_$: _drums1.punchcard();


// Define pass functions for each instrument
var chordsPass = (x) => x.sound("gm_brass_section").scale("c3:minor").color("red").room(1)
var basePass = (x) => x.sound("piano").scale("c3:minor").color("orange")
var lowPass = (x) => x.sound("gm_brass_section").scale("c2:minor").color("yellow")
var leadPass = (x) => x.sound("gm_violin").scale("c4:minor").color("yellow")
var dugPass = (x) => x.sound("gm_pad_warm").scale("c3:minor").color("green")
var pukPass = (x) => x.sound("handchimes").scale("c4:minor").color("cyan").echo(4,1/8,.6)
var pukBuildUpPass = (x) => x.sound("handchimes").scale("c4:minor").color("cyan")
var zumPass = (x) => x.sound("supersaw").ply(8).gain(".5 .7 .4 .6").scale("c3:minor").color("blue")
var dunPass = (x) => x.sound("gm_koto").scale("<c3,c4>:minor").color("magenta").room(1)

// Apply pass functions to patterns
var chords1 = n(`<
 [0 2 4 7 -@4]
 [-2 0 2 5 -@4]
 [-3 0 1 3 -@4]
 [2 0 1 2 -@4]
>`)
var chords2 = n(`<
 [5 3 4 5 -@4]
 [4 2 3 4 -@4]
 [3 1 2 3 -@4]
 [0 3 5 7 -@4]
>`)
var _chords1 = chordsPass(chords1)
var _chords2 = chordsPass(chords2)

var base1 = n(`<
 [0 2 4 7 4 2 0 -]
 [-2 0 2 5 2 0 -2 -]
 [-3 0 1 3 4 5 <3 -> <4 ->]
 [2 0 1 2 3 4 <2 -><1 ->]
>`)
var base2 = n(`<
 [5 3 4 5 3 4 5 -]
 [4 2 3 4 2 3 4 -]
 [3 1 2 3 1 2 3 -]
 [-1 3 5 7 <5 ~> <3 ~> <-1 ~> -]
>`)
var _base1 = basePass(base1)
var _base2 = basePass(base2)

var low1 = n(`<
 0 -2 3 2
>`)
var low2 = n(`<
 5 4 6 7
>`)
var _low1 = lowPass(low1)
var _low2 = lowPass(low2)

var lead1 = n(`<
 [0@3 2 ]
 [-2]
 [3@3 5]
 [2 1]
>`)
var lead2 = n(`<
 [5@3 7]
 [4]
 [6@3 4]
 [7]
>`)
var _lead1 = leadPass(lead1)
var _lead2 = leadPass(lead2)

var dug1 = n(`<
 [2@5 0 1@2] 
 [2@5 0 1 -] 
 [3@5 0 1@2] 
 [2@5 0 1 -] 
>`)
var dug2 = n(`<
 [0@5 2 1@2] 
 [0@5 2 1 -] 
 [0@5 3 1@2] 
 [0@5 2 1 -] 
 >`)
var _dug1 = dugPass(dug1)
var _dug2 = dugPass(dug2)

var puk1 = n(`<
 [-@7 [0,2]] 
 [-@7 [0,3]] 
 [-@7 [-1,4]] 
 [-@7 [-1,3]] 
>`)
var puk2 = n(`<
 [-@7 [0,2]] 
 [-@7 [0,3]] 
 [-@7 [-1,4]] 
 <[-@7 [-1,3]] ->
 >`)

var _pukBuildUp = pukBuildUpPass(n("5 4 3 2"))

var _puk1 = pukPass(puk1)
var _puk2 = pukPass(puk2)

var zum1 = n(`<
 0 2 -2 -1
>`)
var zum2 = n(`<
 5 4 3 0
>`)
var _zum1 = zumPass(zum1)
var _zum2 = zumPass(zum2)

var dun1 = n(`<
 [- [3,5] - [3,5] - 4 5 [3,4]] 
 - 
 [- [1,3] - [1,3] - <2 0> 1 [<-2 2>,0]] 
 - 
>`)
var dun2 = n(`<
 -
 [- 2 3 2 3 4 3 2]
 -
 [- 0 1 2 7 4 0 -]
 >`)
var _dun1 = dunPass(dun1)
var _dun2 = dunPass(dun2)


var M = 1; 
$: arrange(
  [M*4, stack(    
    _drums_intro.lpf(1000),
    _base1.gain(.5),    _low1,
  )],
  [M*4, stack(
    _pukBuildUp.mask("<0@3 1 >"),
    _drums_intro.lpf(1500),
    _base2.gain(.5),    _low2,
  )],
  [M*4, stack(    
    _drums1,
    _base1,    _low1,
    _lead1,
  )],
  [M*4, stack(
    _drums1,
    _base2,    _low2,
    _lead2,
  )],
  [M*8, stack(    
    _drums1,
    _base1.transpose(12),
    _lead1.transpose(-12),
    _dug1,    
    _puk1,
  )],
  [M*8, stack(
    _drums1,
    _base2.transpose(12),
    _lead2.transpose(-12),
    _dug2,    
    _puk2,
  )],
  [1*8, stack(    
    _drums2,
    _chords1.gain(.7), 
    _lead1.lpf(500).vib(4),
    _puk1.transpose(12).gain(.5),
    _zum1, _dun1,
  )],
  [1*8, stack(
    _drums2,
    _chords2.gain(.7),
    _lead2.lpf(500).vib(4),
    _puk2.transpose(12).gain(.5),
    _zum2, _dun2,
  )],  
).punchcard()
  