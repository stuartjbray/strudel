//@title wowter isles
//@by Stuart Bray
//@url https://soundcloud.com/stuart-j-bray

setcpm(30)

// -------------- Drums
const drumsPass = (x) => x.color("white");



var d1 = sound("bd").struct(  "<[1 0 1 0 0 1 <0 1> 0]>").gain("[.2 .8]*2 ")
var d2 = sound("AkaiMPC60_rim").struct("0 0 1 0 0 0 1 <0 1>").gain(".4 1")
var d3 = sound("AlesisSR16_hh").struct("1*16").gain(".1@3 .3@2 .1@3")
var d4 = sound("AkaiLinn_cr").struct(  "0 0 0 0 0 0 0 0")

var _drums_intro = drumsPass(stack( d1, d2, d3  ))            // build up
var _drums1 =      drumsPass(stack(  d1,  d2,  d3,  d4))  // normal
var _drums2 =      stack(
  sound("bd").struct("1 0 0 0 1 1 0 0"),
  sound("sd").struct("0 0 1 0 0 0 1 0"),
  sound("hh").struct("1 1 1 1 1 1 1 1"),
  sound("oh").struct("0 0 0 1 0 0 0 0")
)


// Define pass functions for each instrument
var chordsPass = (x) => chord(x).voicing().sound("piano").color("red")
var bassPass = (x) => x.sound("piano").room(2).scale("c3:major").gain(.5).color("orange")
var leadPass = (x) => x.sound("gm_fretless_bass").scale("c2:major").room(3).color("yellow").gain(.4)
var stringPass = (x) => x.sound("gm_violin").scale("c4:major").room(1).color("green").gain(.5)

// Apply pass functions to patterns
var arp1 = "[- 2 3 - - - 3 -]*2"
var arp2 = "[1 2 3 4 5 1 3 5]*1"
var _chords1 = chordsPass(`<
 C Am C F
>`).arp(arp1)
var _chords2 = chordsPass(`<
 C F G E
 >`).arp(arp2).lpf("500 1000 2000").gain(.5)
var _chords3 = chordsPass(`<
 C F G E
>`).arp("[0,1,2] [2,3] -@3 [1,3,4] - <- [1,3,4]>").gain(.5)




var _bass1 = bassPass(n(`<
 [0 - [2,4] 1]
 [- - [2,5] 1]
 [0 - [4,5] 1]
 [0 - [2,4] 5]
>`))
var _bass2 = bassPass(n(`<
-
>`))

var _lead1 = leadPass(n(`<
 [4 - - [- 5]]
 [4 - - [- 2]]
>`)).room(3)
var _lead2 = leadPass(n(`<
 [0 1 2 3]
 [- 1 2 3]
 [4 1 2 3]
 [5 1 2 -]
>`))

var _string1 = stringPass(n(`<
 [- - 2@2 - - 1 2 - - 3 2@2 - 5 4]/4
>`))

var M = 0;
$: arrange(
  [M*4, stack(    
    _drums_intro,    _chords1.lpf(400), 
  )],
  [M*4, stack(
    _drums1,    _bass1,    _lead1,
    _chords2.transpose("0,12"), 
  )],
  [M*4, stack(    
    _drums1,    _chords2, 
    _bass1.transpose(12),
    _lead1.transpose(12),
  )],
  [M*4, stack(
    _drums1,    _chords2,     _bass1,    _lead1,    _string1,
  )],
  [1*4, stack(
    _drums1,    _chords3, _chords2.transpose(-12).gain(.3),
    _lead2,
  )],  
  [1*4, stack(
    _drums1,    _chords3, _chords2.transpose(-12).gain(.6),
    _lead2.transpose(12).gain(.6),
  )],  
).punchcard()
  