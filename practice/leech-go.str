//@title leech-go
//@by Stuart Bray
//@url https://soundcloud.com/stuart-j-bray

/*
*/
setcpm(30)

// -------------- Drums
var d1 = sound("AkaiLinn_bd").struct(  "1 0 0 1 0 0 0 0").echo(2,.25,.5)
var d2 = sound("AkaiMPC60_rim").struct("0 0 0 0 <1 [1 1] [1 1 1 1] [1 1]> 0 0 0").gain("[.4 .6 .8 .6]*16")
var d2a = sound("AkaiMPC60_rim").struct("1 0 <1 1*2> 0 1 0 1 0").lpf("<500 2000>")

var d3 = sound("AlesisSR16_hh").struct("1 0 1*2 1 0 12 0 0").lpf("<[1500 3000@2]>")
var d4 = sound("circuitstom_sd").struct(  "0 0 1 0 0 0 1 0").room(.4) //.echo(4,1/32,.4).gain(1)

var d4_fill = sound("circuitstom_sd").struct(  "<-@3 [0 0 1 0 0 0 1 1]>").room(.4)
var d5 = sound("dpm48_rd").struct("<- - - [0 0 1 0 0 0 1 1]>")


var _drums_intro = stack( d1, d2  )          .color("white") // build up
var _drums1 =     stack(  d1,  d2,  d3,  d4, d4_fill, d5    ) .color("white") // normal
var _drums2 =     stack(  d2a  )          .color("white") // break down

_$: _drums1.punchcard();

var chords1 = n(`<
-
>`)
var chords2 = n(`<
-
>`)
var _chords1 = chords1.sound("piano").scale("c3:major").color("red")
var _chords2 = chords2.sound("piano").scale("c3:major").color("red")

var base1 = n(`<
 [0 2 4 7 4 2 0 -]
 [-2 0 2 5 2 0 -2 -]
 [-3 0 1 3 4 5 3 4]
 [2 0 1 2 3 4 2 1]
>`)
var base2 = n(`<
 [5 3 4 5 3 4 5 -]
 [4 2 3 4 2 3 4 -]
 [3 1 2 3 1 2 3 -]
 [-1 3 5 7 5 3 -1 -]
>`)
var _base1 = base1.sound("piano").scale("c3:minor").color("orange")
var _base2 = base2.sound("piano").scale("c3:minor").color("orange")

var low1 = n(`<
 0 -2 3 2
>`)
var low2 = n(`<
 5 4 6 7
>`)
var _low1 = low1.sound("gm_brass_section").scale("c2:minor").color("yellow")
var _low2 = low2.sound("gm_brass_section").scale("c2:minor").color("yellow")


var lead1 = n(`<
 [0@3 2 ]
 [-2]
 [3@3 5]
 [2 1]
>`)
var lead2 = n(`<
 [5@3 7]
 [4]
 [6@3 4]
 [7]
>`)
var _lead1 = lead1.sound("gm_violin").scale("c4:minor").color("yellow")
var _lead2 = lead2.sound("gm_violin").scale("c4:minor").color("yellow")

var dug1 = n(`<
 [2@5 0 1@2] 
 [2@5 0 1 -] 
 [3@5 0 1@2] 
 [2@5 0 1 -] 
>`)
var dug2 = n(`<
 [0@5 2 1@2] 
 [0@5 2 1 -] 
 [0@5 3 1@2] 
 [0@5 2 1 -] 
 >`)
var _dug1 = dug1.sound("gm_pad_warm").scale("c3:minor").color("green") 
var _dug2 = dug2.sound("gm_pad_warm").scale("c3:minor").color("green")

var puk1 = n(`<
 [-@7 [0,2]] 
 [-@7 [0,3]] 
 [-@7 [0,4]] 
 [-@7 [0,3]] 
>`)
var puk2 = n(`<
 [-@7 [0,2]] 
 [-@7 [0,3]] 
 [-@7 [0,4]] 
 [-@7 [0,3]] 
 >`)
var _puk1 = puk1.sound("handchimes").scale("c4:minor").color("cyan")
var _puk2 = puk2.sound("handchimes").scale("c4:minor").color("cyan")
// pipeorgan_loud

var M = 1; 
$: arrange(
  [M*4, stack(    
    _drums_intro.lpf(1000),
    _base1.gain(.5),    _low1,
  )],
  [M*4, stack(
    _drums_intro.lpf(1500),
    _base2.gain(.5),    _low2,
  )],
  [M*4, stack(    
    _drums1,
    _base1,    _low1,
    _lead1,
  )],
  [M*4, stack(
    _drums1,
    _base2,    _low2,
    _lead2,
  )],
  [M*8, stack(    
    _drums1,
    _chords1, 
    _base1.transpose(12),
    _lead1.transpose(-12),
    _dug1,    _puk1,
  )],
  [M*8, stack(
    _drums1,
    _chords2,
    _base2.transpose(12),
    _lead2.transpose(-12),
    _dug2,    _puk2,
  )],
  [1*8, stack(    
    _drums2,
    _chords1, 
    _base1,
    _lead1,
    _dug1.transpose(12),
    _puk1.transpose(-12),
  )],
  [1*8, stack(
    _drums2,
    _chords2,
    _base2,
    _lead2,
    _dug2.transpose(12),
    _puk2.transpose(-12),
  )],  
).punchcard()
  