//@title porty-gurl
//@by Stuart Bray
//@url https://soundcloud.com/stuart-j-bray

setcpm(28)

// -------------- Drums
const drumsPass = (x => x.color("white"));

var d1 = sound("AkaiLinn_bd").struct(  "1 0     1 0 1 0 1 <0 1>")
var d2 = sound("AkaiMPC60_rim").struct("0 [- 1] 0 0 0 [- 1] 0 0")
var d3 = sound("AlesisSR16_hh").struct("0 1 0 1 0 1*2 0 1")
var d4 = sound("alesissr16_oh").struct(  "0 0 1 0 0 0 1 <0 1> ")
var d5 = sound("dr550_hh").struct("1*16").gain(".3 .2 .6 .4")

var _drums_intro = drumsPass(stack(  d1,  d3 , d5 ))  // hh
var _drums1 =      drumsPass(stack(  d1,  d2,  d3, d4))  // oh
var _drums2 =      drumsPass(stack(   d2, d3, d5  ))     // no bd

// Define pass functions for each instrument
var chordsPass = (x) => x.sound("gm_brass_section").scale("c3:minor").color("red").release(1.2)
var basePass = (x) => x.sound("gm_pad_warm").release(.5).scale("c2:minor").color("orange")
var leadPass = (x) => x.sound("gm_shanai").scale("c4:minor").color("yellow").room(1.5)
var thumPass = (x) => x.sound("gm_alto_sax").scale("c4:minor").color("yellow").room(1.5)


// Apply pass functions to patterns
var _chords1 = chordsPass(n(`<
 [0 - - - - 0 - 0]
 [2 - - - - 2 - 2]
 [-2 - - - - -2 - -2]
 [3 - - - - 3 - 3]
>`))
var _chords2 = chordsPass(n(`<
 [4 - - - - 4 - 4]
 [5 - - - - 5 - 5]
 [-2 - - - - -2 - -2]
 [3 - - - - 3 - 3]
>`))

var _base1 = basePass(n(`<
 0 2 5 3
>`).struct("1@3 -@2 1@3 "))
var _base2 = basePass(n(`<
 2 5 3 5
>`).struct("1@3 -@2 1@3 "))

var _lead1 = leadPass(n(`<
 [6 [- 5] - 4 4 - 6 -]
 <2 9>
 [- - - - <0 3> [- 2] - 3 ]
 [3]
>`))
var _lead2 = leadPass(n(`<
 [4 [- 5] - 4 4 - 5 -]
 2
 [- - - - 3  [- 2] - 3 ]
 [3]
>`))

var _thum1 = thumPass(n(`<
 [-]
 [- [0,5] - [0,6]]
 [-]
 [- [0,4] - [0,3]]
>`))
var _thum2 = thumPass(n(`<
 [-]
 [- [0,5] - [0,6]]
 [-]
 [- [0,4] - [0,3]]
>`))

var M = 0;
$: arrange(
  [M*4, stack(    
    _drums_intro,    _chords1, 
    _base1,
  )],
  [M*4, stack(
    _drums1,    _chords2,
    _base2,
  )],
  [M*4, stack(    
    _drums2,    _chords1, 
    _base1,    _lead1,
  )],
  [M*4, stack(
    _drums1,    _chords2,
    _base2,    _lead2,
  )],
  [1*4, stack(    
    _drums2,    _chords1, 
    _base1,    _lead1,
    _thum1,
  )],
  [1*4, stack(
    _drums1,    _chords2,
    _base2,    _lead2,
    _thum2,
  )],
  [1*4, stack(    
    _drums2,    _chords1, 
    _base1,    
    _thum1.transpose(-12),
  )],
  [1*4, stack(
    _drums1,    _chords2,
    _base2,    
    _thum2.transpose(-12),
  )],
  ).punchcard()
  