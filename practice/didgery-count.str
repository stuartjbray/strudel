

var a = sound("didgeridoo:<0 1 2 3 4 5 6>").chop(8);
var a1 = a.arp("[1 -]*<4 8 16>").clip(.1)
var a2 = a.arp("[3 2 1 -]*12").transpose("<6 12 24>")

var d = n("0*8").sound("didgeridoo:<3 4 5>").clip(2)

$: arrange(
  [1,stack(
    a, 
    d
    )],
  [1,stack(
    a1, d
    )],
  [1,stack(
    a2, d
    )], 
).gain(.7)

$: stack(
 sound("bd*4").lpf("200 500 1000 2000").gain("<[.4 1 .2]>"),
  sound("hh*16").struct("1*3 - 1 - 1*3"),
  sound("cp").struct("- - <1 1*2 1*4> -").hpf("<2000 4000>")
 ).gain(.5)

$: stack(
 sound("ocarina").n("<[0,2] [0,3] [0,6] [0,7]>").scale("c3:major")
  .crush("<2 4 6>").fast(2).clip("<.6 1>").room("3")
)

$: sound("num:<1 2 3 4 5 6 7 8>").clip("<1 .5>").lpf("<2000 4000>").fast(2).gain(1).crush(8)