//@title beeeker
//@by Stuart Bray
//@url https://soundcloud.com/stuart-j-bray

/*
*/
setcpm(30)


var _blown1 = n(`<
 [0@3  0@2 -1 0 -]
 [-1@3 -1@2 -2 -1 -]
 >`).scale("<c3 c4>:major").sound("kalimba3,gm_blown_bottle")
 .phaser("<4 16 8>").distort(1.5).crush(8).attack(1).clip("<1.2 .5 .3>")
var _blown2 = n(`<
 [0@3  0@2 -1 0 -]
 [-1@3 -1@2 -2 -1 -]
 >`).scale("<c2>:major").sound("kalimba3,gm_blown_bottle")
 .phaser("<4 16 8>").distort(1).attack(1).clip("<1.2 .5 .3>")


// -------------- Drums
var d1 = sound("AkaiLinn_bd ").struct(  "1 0 0 1 0 0 0 0")
var d2 = sound("AkaiMPC60_rim").struct("0 0 0 0 0 0 1 0").echo(4,.025,.25)
var d3 = sound("AlesisSR16_hh").struct("1*2 0 0 0 1 0 0 0").lpf("<800 1500>")
var d4 = sound("AkaiLinn_cr").struct(  "0 0 0 0 0 0 <0 1> 0").gain(.03).room(5)
var d5 = sound("gm_melodic_tom").struct(  "0 1 1 0 0 0 0 0").gain(2).room(1)
var d1_down = sound("AkaiLinn_bd").struct(  "0 1*8").phaser(sine.range(500,1500))

var _drums_intro =     stack(  d1,  d2,  d3,  d4).color("white")
var _drums1 = stack( d1, d2, d3, d1_down, d5  ).color("white") 
var _drums2 =     stack(  d1, d2  ).color("white") // break down



var chords1 = n(`<
 [<0 1*2> 2 - [4,7]]
>`)
var chords2 = n(`<
 [<0 1*2> 2 - [4,9]]
 >`)
var _chords1 = chords1.sound("gm_pizzicato_strings").scale("c3:major").color("red")
var _chords2 = chords2.sound("gm_pizzicato_strings").scale("c3:major").color("red")

var base1 = n(`<
-
>`)
var base2 = n(`<
-
>`)
var _base1 = base1.sound("piano").scale("c3:major").color("orange")
var _base2 = base2.sound("piano").scale("c3:major").color("orange")

var lead1 = n(`<
-
>`)
var lead2 = n(`<
-
>`)
var _lead1 = lead1.sound("piano").scale("c3:major").color("yellow")
var _lead2 = lead2.sound("piano").scale("c3:major").color("yellow")

// Mute indicator - to quickly skip to area of interest. Toggle lines by changing M to 0 or 1.
var M = 0; // change to M=1 to unmute all stacks with an M.
$: arrange(
  // Change 1 to be M to conditionally mute this stack.
  [M*4, stack(    
    _blown1,
    _drums_intro,
    _chords1, 
    _base1,
  )],
  [1*4, stack(
    _blown2,
    _drums1,
    _chords2,
    _base2,
  )],
  [M*4, stack(    
    _drums1,
    _chords1, 
    _base1,
    _lead1,
  )],
  [M*4, stack(
    _drums1,
    _chords2,
    _base2,
    _lead2,
  )],
  ).punchcard()
  