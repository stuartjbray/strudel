//@title Windslides
//@by Stuart Bray
//@url https://soundcloud.com/stuart-j-bray

/*
*/
setcpm(40)

// -------------- Drums
var d1 = sound("compurhythm8000_bd").struct("1 0 0 0 1 0 0 1")
var d2 = sound("bossdr110_sd").struct("0 0 1 0 0 <0 1> 0 0")
var d3 = sound("hh").struct("0 1 0 1 0 1 0 1").gain("[.3@3 .8]")
var d4 = sound("oh").struct(  "0 0 <0 1> 0 <0 0 0 1> 0 0 0")

var _drums_intro = stack( d1  ).color("white") // build up
var _drums1 =     stack(  d1,  d2,  d3,  d4).color("white") // normal
var _drums2 =     stack(  d1, d2  ).color("white") // break down

var pianoPass = (x) => n(x).sound("piano").scale("c4:major").color("red")
var steinPass = (x) => n(x).sound("steinway").scale("<c3>:major").color("orange")
var saxPass = (x) => n(x).scale("c3:major").sound("vibraphone").color("yellow").release(.5).echo(4,1/8,.7)

var chordsArp = "[0,1,2] 0 [1,2] -"
var chordsArp2 = "[2 1 0 2] [1 0 2 -]"
var chords1 = `<
 [-3,0,2] [-2,0,4] [-4,-2,0] [-3,-1,0]
>`
var chords2 = `<
 [-3,0,2] [-1,0,4] [1,4,6] [1,3,5]
>`
var _chords1 = pianoPass(chords1).arp(chordsArp)
var _chords2 = pianoPass(chords2).arp(chordsArp)
var _chords3 = pianoPass(chords1).arp(chordsArp2)
var _chords4 = pianoPass(chords2).arp(chordsArp2)

var _chords1x = steinPass(`<
 - -
 [- - - [0,4]]
 [- [0,3] - [0,2] ] 
>`).transpose(12)
var _chords2x = steinPass(`<
 - -
 [- - - [-2,2]]
 [- [-2,3] - [-2,4] ] 
>`).transpose(12)

var _base1 = steinPass(`< 0 3 -2 1>`)
var _base2 = steinPass(`< 0 4 2 3>`)
var _base3 = steinPass(`< 
 [0@3 2@3 4@2] 3
 [-2@3 0@3 2@2] [1@3 2@3 1@2 ] 
 >`)
var _base4 = steinPass(`< 
 [0@3 1@3 2@2] 0
 [4@3 3@3 2@2] [-3 -2] 
>`)

var _lead1 = saxPass(`<
 [4 0 ]
 -
 [4@2 3 2]
 [1 - - 3]
>`)
var _lead2 = saxPass(`<
 [2 [0,2]]
 [4  -]
 [6  <4 [6,8]>]
 [<5 [3,7]>]
>`)
var _lead3 = saxPass(`< 3 2 1 0>`)
var _lead3x = saxPass(`<3 4 7 6>`).late(1/8).clip(.5)
var _lead4 = saxPass(`< 1 2 4 3>`)
var _lead4x = saxPass(`<7 6 6 4>`).late(1/8).clip(.5)


var M = 1; 
$: arrange(
  [M*4, stack(    
    _drums_intro,
    _chords1, _chords1x, 
    _base1,
  )],
  [M*4, stack(
    _drums_intro,
    _chords2, _chords2x,
    _base2,
  )],
  [M*4, stack(    
    _drums1,
    _chords1,     _base1,    _lead1,
  )],
  [M*4, stack(
    _drums1,
    _chords2,    _base2,    _lead2,
  )],
  [1*4, stack(    
    _drums1,
    _chords1,     _base1,    _lead1,
  )],
  [1*4, stack(
    _drums1,
    _chords2,    _base2,    _lead2,
  )],
  [M*4, stack(    
    _drums1,
    _chords3,     _base3,   
  )],
  [M*4, stack(
    _drums1,
    _chords4,    _base4,    
  )],
  [M*4, stack(    
    _drums1,
    _chords3,     _base3,    _lead3,
  )],
  [M*4, stack(
    _drums1,
    _chords4,    _base4,    _lead4,
  )],
  [M*4, stack(    
    _drums1,
    _chords3,     _base3,    _lead3,_lead3x,
  )],
  [M*4, stack(
    _drums1,
    _chords4,    _base4,    _lead4,_lead4x,
  )],

).punchcard()
  