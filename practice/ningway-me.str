//@title running-away-from-me
//@by Stuart Bray
//@url https://soundcloud.com/stuart-j-bray

setcpm(20)

// -------------- Drums
const drumsPass = (x) => x.color("white");

var d1 = sound("bd").struct(  "0 0 0 0 0 0 0 0")
var d2 = sound("rim").struct("0 0 0 0 0 0 0 0")
var d3 = sound("hh").struct("0 0 0 0 0 0 0 0")
var d4 = sound("cr").struct(  "0 0 0 0 0 0 0 0")

var _drums_intro = drumsPass(stack( d1, d2  ))            // build up
var _drums1 =      drumsPass(stack(  d1,  d2,  d3,  d4))  // normal
var _drums2 =      drumsPass(stack(  d1, d2  ))           // break down


// Define pass functions for each instrument
var chordsPass = (x) => n(x).scale("c3:major").sound("gm_fretless_bass").color("red").release(1.2)
var bassPass = (x)   => n(x).scale("c3:major").sound("piano").color("orange").room(2)
var dugPass = (x)    => n(x).scale("<c2,c3>:major").sound("gm_fretless_bass").color("yellow").room(2)
var leadPass = (x)   => n(x).scale("c4:major").sound("piano").color("green")
var runPass = (x)    => n(x).scale("c4:major").ply(12).clip(".3").gain("[.4 .3 .2 .1]").room(3).sound("square ").color("blue")

// Apply pass functions to patterns
var _chords1 = chordsPass(`<
 [- - - - - - 0 4 - 7@2 <- 4 - 5>] 
>`)
var _chords2 = chordsPass(`<
 [- - - - - -2 0 4 - 7@2 <9 4 - 5>] 
>`)

var bassArp = "[1 - 1 1 - 1 1 - 1 1 - 1]"
var _bass1 = bassPass(`< 0@4 -2@2 -4@2 >`).arp(bassArp)
var _bass2 = bassPass(`< 0@4 2@2 3@2 >`).arp(bassArp)

var dugArp = ("[- [1@2 -] ]")
var _dug1 = dugPass(`< 0!4 -2!2 -4!2 >`).arp(dugArp)
var _dug2 = dugPass(`< 0!4 2!2 3!2 >`).arp(dugArp)

var _lead1 = leadPass(`<
 [-@4 0 1 2@3  -@3]
 [-@4 0 1 2 1 0 -@3]
 [-@4 0 -1 0@3 -@3]
 [-@4 0 1 2 3 4 -@3]
>`)
// WHY SAME!
var _lead2 = leadPass(`<
 [-@4 0 1 2@3  -@3]
 [-@4 0 1 2 1 0 -@3]
 [-@4 0 -1 0@3 -@3]
 [-@4 0 1 2 3 4 -@3]
>`)

var _run1 = runPass(`<
 [3,5]
 [2,4]
 [1,3]
 [0,2]
>`)

var M = 0; 
$: arrange(
  [1*8, stack(    
    _drums_intro,
    _chords1, 
    _bass1,
    _dug1,
    _lead1,
    _run1,
  )],
  [1*8, stack(
    _drums1,
    _chords2,
    _bass2,
    _dug2,
    _lead2,
    _run1,
  )],
  [M*8, stack(    
    _drums1,
    _chords1, 
    _bass1,
    _lead1,
  )],
  [M*8, stack(
    _drums1,
    _chords2,
    _bass2,
    _lead2,
  )],
  ).punchcard()
  